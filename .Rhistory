getwd()
install.packages("renv")
renv::snapshot()
usethis::use_package(package = "renv", type = "Suggests")
file.create()
file.create("R/calculate_bic.R")
install.packages("styler")
styler::style_pkg()
install.packages("lintr")
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
library(data.table)
?usethis::use_package
usethis::use_package(package = "renv", type = "Imports")
usethis::use_package(package = "renv", type = "Suggests")
usethis::use_package(package = "data.table", type = "Imports")
usethis::use_package(package = "renv", type = "Suggests")
usethis::use_package(package = "renv", type = "Suggests")
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
devtools::document()
devtools::document()
lintr::lint_package()
lintr::lint_package()
devtools::document()
lintr::lint_package()
usethis::use_testthat()
install.packages("testthat")
usethis::use_test()
usethis::use_mit_license()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
?devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
file.create("R/global.R")
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
list.files(system.file("ExampleData", package = "GLP"))
data <- readRDS(system.file("ExampleData", "PBMC.rds", package = "GLP"))
system.file("ExampleData", "PBMC.rds", package = "GLP")
system.file("inst/ExampleData", "PBMC.rds", package = "GLP")
devtools::document()
file.create("inst/GLP-Ex.R")
data <- readRDS(file.path(system.file(package = "GLP"), "ExampleData", "PBMC.rds"))
devtools::check()
devtools::check()
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
devtools::check()
system.file("inst/ExampleData", "PBMC.rds", package = "GLP")
data <- readRDS(system.file("inst/ExampleData", "PBMC.rds", package = "GLP"))
save(data, "./data.RData")
save(data, file="./data.RData")
data(data.RData)
data("data.RData")
load("./data/data.RData")
rm(data)
load("./data/data.RData")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
load("./data/PBMC.RData")
list()
ls()
devtools::document()
devtools::check()
devtools::check()
calculate_gpr
counts <- matrix(runif(20, min = 0, max = 1), nrow = 5, ncol = 4)
gene.info <- calculate_gpr(counts)
data <- as.data.table(counts, keep.rownames = TRUE)
data
sample(1:100,20)
counts <- matrix(sample(1:100,20), nrow = 5, ncol = 4)
data <- as.data.table(counts, keep.rownames = TRUE)
data
data <- data[rowSums(data > 0) >= 1, , drop = FALSE]
data <- data[rowSums(data > 0) >= 1, , drop = FALSE]
data
load("./data/PBMC.RData")
counts <- data@assays$RNA@counts
data <- as.data.table(counts, keep.rownames = TRUE)
data[1:5,1:5]
counts <- matrix(sample(1:100,20), nrow = 5, ncol = 4)
rownames(counts) <- c("A","B","C","D","E")
data <- as.data.table(counts, keep.rownames = TRUE)
data
data <- data[rowSums(data > 0) >= 1, , drop = FALSE]
gene <- data$rn
data <- data[, -1]
cellnumber <- ncol(data)
# 计算每个基因的总表达量、均值和标准差
sum_exp <- rowSums(data)
exp.mean <- sum_exp / cellnumber
# 计算每个基因的正值细胞数量和比例
counts_matrix_pos <- data > 0
positive_cell_number <- rowSums(counts_matrix_pos)
positive_cell_rate <- positive_cell_number / cellnumber
# 创建数据框
df <- data.table(
exp.mean = exp.mean,
positive_rate = positive_cell_rate,
pcount = positive_cell_number,
gene = gene
)
df
devtools::document()
devtools::check()
paste0("gene",1:10)
devtools::document()
devtools::check()
counts <- matrix(sample(0:10,3000*1000), nrow = 3000, ncol = 1000)
counts <- matrix(sample(0:10,3000*1000,replace = TRUE), nrow = 3000, ncol = 1000)
devtools::document()
devtools::check()
counts <- matrix(sample(0:10,3000*1000, replace = TRUE), nrow = 3000, ncol = 1000)
rownames(counts) <- paste0("gene",1:(3000*1000))
rownames(counts) <- paste0("gene",1:3000)
gene.info <- calculate_gpr(counts)
result <- glp(gene.info, 3, 1000)
result
devtools::document()
devtools::check()
getNamespaceExports("yaml")
install.packages("yaml")
install.packages("yaml")
getNamespaceExports("yaml")
pkgdown::build_site()
usethis::use_tidy_github_actions()
